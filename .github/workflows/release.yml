name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build binaries
      run: |
        # Create build directory
        mkdir -p dist

        # Build for all platforms
        echo "Building for Linux AMD64..."
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.VERSION }}" -o dist/sshm-linux-amd64 main.go
        
        echo "Building for Linux ARM64..."
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.VERSION }}" -o dist/sshm-linux-arm64 main.go
        
        echo "Building for macOS Intel..."
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.VERSION }}" -o dist/sshm-darwin-amd64 main.go
        
        echo "Building for macOS Apple Silicon..."
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.VERSION }}" -o dist/sshm-darwin-arm64 main.go
        
        echo "Building for Windows AMD64..."
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.VERSION }}" -o dist/sshm-windows-amd64.exe main.go

    - name: Generate checksums
      run: |
        cd dist
        sha256sum * > checksums.txt
        echo "Generated checksums:"
        cat checksums.txt

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/sshm-linux-amd64
          dist/sshm-linux-arm64
          dist/sshm-darwin-amd64
          dist/sshm-darwin-arm64
          dist/sshm-windows-amd64.exe
          dist/checksums.txt
        body: |
          ## 🚀 SSHM ${{ steps.version.outputs.VERSION }}
          
          Enterprise-grade SSH connection manager with tmux integration and intuitive TUI interface.
          
          ### ✨ What's New
          - Professional TUI interface with k9s-inspired design
          - Secure credential storage with keyring integration
          - Connection history and monitoring system
          - Profile-based server organization
          - Batch connection support
          
          ### 📦 Downloads
          
          Choose the appropriate binary for your system:
          
          | Platform | Architecture | Download |
          |----------|-------------|----------|
          | 🐧 Linux | AMD64 | `sshm-linux-amd64` |
          | 🐧 Linux | ARM64 | `sshm-linux-arm64` |
          | 🍎 macOS | Intel | `sshm-darwin-amd64` |
          | 🍎 macOS | Apple Silicon | `sshm-darwin-arm64` |
          | 🪟 Windows | AMD64 | `sshm-windows-amd64.exe` |
          
          ### 🛠️ Installation
          
          **Linux/macOS:**
          ```bash
          # Download and install (replace URL with actual download link)
          curl -L [DOWNLOAD_URL] -o sshm
          chmod +x sshm
          sudo mv sshm /usr/local/bin/
          ```
          
          **Windows:**
          Download the `.exe` file and add it to your PATH.
          
          ### ✅ Verification
          
          Verify the download with checksums:
          ```bash
          sha256sum sshm-[platform]-[arch]
          # Compare with checksums.txt
          ```
          
          ### 🎯 Quick Start
          
          ```bash
          # Launch the TUI interface
          sshm tui
          
          # Add your first server
          sshm add production-web
          ```
          
          Full documentation available in the [README](https://github.com/igda-igda/sshm#readme).
        draft: false
        prerelease: false